name: "On commit to main"

on:
  workflow_run:
    workflows: ["On commit"]
    branches: [main]
    types: [completed]

jobs:
  binaries:
    name: Generate binaries
    runs-on: ubuntu-latest

    steps:
    - name: Set up Go 1.x
      uses: actions/setup-go@v2
      with:
        go-version: ^1.17

    - name: Check out code into the Go module directory
      uses: actions/checkout@v2

    - name: Get dependencies
      run: make deps
      
    - name: Get goreleaser
      run: go install github.com/goreleaser/goreleaser@latest

    - name: Generate binaries
      run: make compile

    - name: Archive production artifacts
      uses: actions/upload-artifact@v2
      with:
        name: worklog-binary
        path: dist

  run-ubuntu:
    name: Run-ubuntu
    runs-on: ubuntu-latest
    needs: [binaries]

    strategy:
      matrix:
        binary:
          - "amd64"

    steps:
    - name: Download
      uses: actions/download-artifact@v2
      with:
        name: worklog-binary

    - name: Permissions
      run: "sudo chown -R $USER:$USER ./32bit ./64bit && sudo chmod +x 32bit/worklog-* 64bit/worklog-*"

    - name: Extract
      run: "mv ./worklog_linux_${{ matrix.binary }}/worklog ./worklog"

    - name: Test
      run: "./worklog create --title test && ./worklog print -t"

  run-mac:
    name: Run-mac
    runs-on: macos-latest
    needs: [binaries]

    strategy:
      matrix:
        binary:
          - "amd64"

    steps:
    - name: Download
      uses: actions/download-artifact@v2
      with:
        name: worklog-binary

    - name: Permissions
      run: "sudo chown -R $USER ./32bit ./64bit && sudo chmod +x 32bit/worklog-* 64bit/worklog-*"

    - name: Extract
      run: "mv ./worklog_darwin_${{ matrix.binary }}/worklog ./worklog"

    - name: Test
      run: "./worklog create --title test && ./worklog print -t"

  run-windows:
    name: Run-windows
    runs-on: windows-latest
    needs: [binaries]

    strategy:
      matrix:
        binary:
          - "worklog_windows_amd64"

    steps:
    - name: Download
      uses: actions/download-artifact@v2
      with:
        name: worklog-binary

    - name: Extract
      run: "move .\\worklog_windows_${{ matrix.binary }}\\worklog.exe .\\worklog.exe"

    - name: Test
      run: ".\\worklog.exe create --title test; .\\worklog.exe print -t"

  changelog:
    name: Generate changelog
    runs-on: ubuntu-latest

    steps:
    - name: Check out
      uses: actions/checkout@v2

    - name: Generate changelog
      uses: heinrichreimer/github-changelog-generator-action@v2.1.1
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        output: release-changelog.txt

    - name: Archive changelog artifact
      uses: actions/upload-artifact@v2
      with:
        name: release-changelog
        path: release-changelog.txt

  release:
    name: Generate release
    runs-on: ubuntu-latest
    needs:
      - binaries
      - changelog
      - run-ubuntu
      - run-mac
      - run-windows

    steps:
    - name: Check out
      uses: actions/checkout@v2
      with:
          fetch-depth: 0

    - name: Download changelog
      uses: actions/download-artifact@v2
      with:
        name: release-changelog

    - name: Fetch all tags
      run: git fetch --force --tags

    - name: Set up Go
      uses: actions/setup-go@v2
      with:
        go-version: ^1.17

    - name: Run GoReleaser
      uses: goreleaser/goreleaser-action@v2
      with:
        distribution: goreleaser
        version: latest
        args: release --rm-dist
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
