name: "On commit to main"

on:
  workflow_run:
    workflows: ["On commit"]
    branches: [main]
    types: [completed]

jobs:
  binaries:
    name: Generate binaries
    runs-on: ubuntu-latest

    steps:
    - name: Set up Go 1.x
      uses: actions/setup-go@v3
      with:
        go-version: ^1.20

    - name: Check out code into the Go module directory
      uses: actions/checkout@v3
      with:
          fetch-depth: 0

    - name: Fetch all tags
      run: git fetch --force --tags

    - name: Get dependencies
      run: make deps

    - name: Get goreleaser
      run: go install github.com/goreleaser/goreleaser@latest

    - name: Generate binaries
      run: make compile

    - name: Archive test artifacts
      uses: actions/upload-artifact@v3
      with:
        name: test-binaries
        path: dist

  run-ubuntu:
    name: Run-ubuntu
    runs-on: ubuntu-latest
    needs: [binaries]

    strategy:
      matrix:
        binary:
          - "amd64_v1"

    steps:
    - name: Download
      uses: actions/download-artifact@v3
      with:
        name: test-binaries

    - name: Permissions
      run: "sudo chown -R $USER:$USER ./cli_linux_${{ matrix.binary }}/worklog && sudo chmod +x ./cli_linux_${{ matrix.binary }}/worklog"

    - name: Test
      run: "./cli_linux_${{ matrix.binary }}/worklog --version"

  run-mac:
    name: Run-mac
    runs-on: macos-latest
    needs: [binaries]

    strategy:
      matrix:
        binary:
          - "amd64_v1"

    steps:
    - name: Download
      uses: actions/download-artifact@v3
      with:
        name: test-binaries

    - name: Permissions
      run: "sudo chown -R $USER ./cli_darwin_${{ matrix.binary }}/worklog && sudo chmod +x ./cli_darwin_${{ matrix.binary }}/worklog"

    - name: Test
      run: "./cli_darwin_${{ matrix.binary }}/worklog --version"

  run-windows:
    name: Run-windows
    runs-on: windows-latest
    needs: [binaries]

    strategy:
      matrix:
        binary:
          - "amd64_v1"

    steps:
    - name: Download
      uses: actions/download-artifact@v3
      with:
        name: test-binaries

    - name: Test
      run: ".\\cli_windows_${{ matrix.binary }}\\worklog.exe --version"

  remove-test-artifacts:
    name: Remove test artifacts
    runs-on: ubuntu-latest
    needs:
      - run-ubuntu
      - run-mac
      - run-windows

    steps:
    - name: Delete test artifacts
      uses: geekyeggo/delete-artifact@v2
      with:
          name: test-binaries

  release:
    if: startsWith(github.ref, 'refs/tags/')
    name: Generate release
    runs-on: ubuntu-latest
    needs:
      - run-ubuntu
      - run-mac
      - run-windows

    steps:
    - name: Check out
      uses: actions/checkout@v3
      with:
          fetch-depth: 0

    - name: Fetch all tags
      run: git fetch --force --tags

    - name: Set up Go
      uses: actions/setup-go@v3
      with:
        go-version: ^1.20

    - name: Run GoReleaser
      uses: goreleaser/goreleaser-action@v3
      with:
        distribution: goreleaser
        version: latest
        args: release --rm-dist
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Archive production artifacts
      uses: actions/upload-artifact@v3
      with:
        name: worklog-binaries
        path: dist/*
